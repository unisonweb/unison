[{"display_html":"<span class=\"keyword\">class</span> <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; <a href=\"#t:Quote\">Quote</a> (m :: <a href=\"../base-4.18.2.1/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.18.2.1/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:newName\">newName</a> :: <a href=\"../base-4.18.2.1/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a></li></ul>","name":"Quote newName","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#t:Quote"},{"display_html":"<a href=\"#v:unsafeQToQuote\">unsafeQToQuote</a> :: <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> a -&gt; m a","name":"unsafeQToQuote","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:unsafeQToQuote"},{"display_html":"<a href=\"#v:unTypeQQuote\">unTypeQQuote</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; m (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:TExp\" title=\"Language.Haskell.TH.Syntax\">TExp</a> a) -&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"unTypeQQuote","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:unTypeQQuote"},{"display_html":"<a href=\"#v:unsafeTExpCoerceQuote\">unsafeTExpCoerceQuote</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; m (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:TExp\" title=\"Language.Haskell.TH.Syntax\">TExp</a> a)","name":"unsafeTExpCoerceQuote","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:unsafeTExpCoerceQuote"},{"display_html":"<a href=\"#v:liftQuote\">liftQuote</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (t :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> t, <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m) =&gt; t -&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"liftQuote","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:liftQuote"},{"display_html":"<a href=\"#v:liftTypedQuote\">liftTypedQuote</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (t :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> t, <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m) =&gt; t -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m t","name":"liftTypedQuote","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:liftTypedQuote"},{"display_html":"<a href=\"#v:liftStringQuote\">liftStringQuote</a> :: <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; <a href=\"../base-4.18.2.1/Data-String.html#t:String\" title=\"Data.String\">String</a> -&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"liftStringQuote","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:liftStringQuote"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Code\">Code</a> (m :: <a href=\"../base-4.18.2.1/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a> -&gt; <a href=\"../base-4.18.2.1/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) = <a href=\"#v:Code\">Code</a> {<ul class=\"subs\"><li><a href=\"#v:examineCode\">examineCode</a> :: m (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:TExp\" title=\"Language.Haskell.TH.Syntax\">TExp</a> a)</li></ul>}","name":"Code Code examineCode","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#t:Code"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:CodeQ\">CodeQ</a> = <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r -&gt; <a href=\"../base-4.18.2.1/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>","name":"CodeQ","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#t:CodeQ"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:IsCode\">IsCode</a> q (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) c | c -&gt; a q <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toCode\">toCode</a> :: c -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> q a</li><li><a href=\"#v:fromCode\">fromCode</a> :: <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> q a -&gt; c</li></ul>","name":"IsCode toCode fromCode","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#t:IsCode"},{"display_html":"<a href=\"#v:unsafeCodeCoerce\">unsafeCodeCoerce</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m a","name":"unsafeCodeCoerce","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:unsafeCodeCoerce"},{"display_html":"<a href=\"#v:liftCode\">liftCode</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. m (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:TExp\" title=\"Language.Haskell.TH.Syntax\">TExp</a> a) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m a","name":"liftCode","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:liftCode"},{"display_html":"<a href=\"#v:unTypeCode\">unTypeCode</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m a -&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"unTypeCode","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:unTypeCode"},{"display_html":"<a href=\"#v:hoistCode\">hoistCode</a> :: <span class=\"keyword\">forall</span> m n (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (<span class=\"keyword\">forall</span> x. m x -&gt; n x) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m a -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> n a","name":"hoistCode","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:hoistCode"},{"display_html":"<a href=\"#v:bindCode\">bindCode</a> :: <span class=\"keyword\">forall</span> m a (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (b :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m a -&gt; (a -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m b) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m b","name":"bindCode","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:bindCode"},{"display_html":"<a href=\"#v:bindCode_\">bindCode_</a> :: <span class=\"keyword\">forall</span> m a (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (b :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m a -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m b -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m b","name":"bindCode_","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:bindCode_"},{"display_html":"<a href=\"#v:joinCode\">joinCode</a> :: <span class=\"keyword\">forall</span> m (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m (<a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m a) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> m a","name":"joinCode","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:joinCode"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:Splice\">Splice</a> = <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Code\" title=\"Language.Haskell.TH.Syntax.Compat\">Code</a> :: <span class=\"keyword\">forall</span> r. (* -&gt; *) -&gt; <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r -&gt; *","name":"Splice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#t:Splice"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SpliceQ\">SpliceQ</a> = <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r -&gt; *","name":"SpliceQ","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#t:SpliceQ"},{"display_html":"<a href=\"#v:bindSplice\">bindSplice</a> :: <span class=\"keyword\">forall</span> m a (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (b :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m a -&gt; (a -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m b) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m b","name":"bindSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:bindSplice"},{"display_html":"<a href=\"#v:bindSplice_\">bindSplice_</a> :: <span class=\"keyword\">forall</span> m a (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (b :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m a -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m b -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m b","name":"bindSplice_","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:bindSplice_"},{"display_html":"<a href=\"#v:examineSplice\">examineSplice</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) m (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a -&gt; m (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:TExp\" title=\"Language.Haskell.TH.Syntax\">TExp</a> a)","name":"examineSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:examineSplice"},{"display_html":"<a href=\"#v:hoistSplice\">hoistSplice</a> :: <span class=\"keyword\">forall</span> m n (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; (<span class=\"keyword\">forall</span> x. m x -&gt; n x) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> n a","name":"hoistSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:hoistSplice"},{"display_html":"<a href=\"#v:joinSplice\">joinSplice</a> :: <span class=\"keyword\">forall</span> m (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r). <a href=\"../base-4.18.2.1/Control-Monad.html#t:Monad\" title=\"Control.Monad\">Monad</a> m =&gt; m (<a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a","name":"joinSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:joinSplice"},{"display_html":"<a href=\"#v:liftSplice\">liftSplice</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. m (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:TExp\" title=\"Language.Haskell.TH.Syntax\">TExp</a> a) -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a","name":"liftSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:liftSplice"},{"display_html":"<a href=\"#v:liftTypedFromUntypedSplice\">liftTypedFromUntypedSplice</a> :: (<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Lift\" title=\"Language.Haskell.TH.Syntax\">Lift</a> t, <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m) =&gt; t -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m t","name":"liftTypedFromUntypedSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:liftTypedFromUntypedSplice"},{"display_html":"<a href=\"#v:unsafeSpliceCoerce\">unsafeSpliceCoerce</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a> -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a","name":"unsafeSpliceCoerce","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:unsafeSpliceCoerce"},{"display_html":"<a href=\"#v:unTypeSplice\">unTypeSplice</a> :: <span class=\"keyword\">forall</span> (r :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:RuntimeRep\" title=\"GHC.Exts\">RuntimeRep</a>) (a :: <a href=\"../base-4.18.2.1/GHC-Exts.html#t:TYPE\" title=\"GHC.Exts\">TYPE</a> r) m. <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Quote\" title=\"Language.Haskell.TH.Syntax.Compat\">Quote</a> m =&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a -&gt; m <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"unTypeSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:unTypeSplice"},{"display_html":"<a href=\"#v:expToSplice\">expToSplice</a> :: <a href=\"../base-4.18.2.1/Control-Applicative.html#t:Applicative\" title=\"Control.Applicative\">Applicative</a> m =&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:TExp\" title=\"Language.Haskell.TH.Syntax\">TExp</a> a -&gt; <a href=\"Language-Haskell-TH-Syntax-Compat.html#t:Splice\" title=\"Language.Haskell.TH.Syntax.Compat\">Splice</a> m a","name":"expToSplice","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:expToSplice"},{"display_html":"<a href=\"#v:getPackageRoot\">getPackageRoot</a> :: <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"../base-4.18.2.1/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"getPackageRoot","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:getPackageRoot"},{"display_html":"<a href=\"#v:makeRelativeToProject\">makeRelativeToProject</a> :: <a href=\"../base-4.18.2.1/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"../base-4.18.2.1/System-IO.html#t:FilePath\" title=\"System.IO\">FilePath</a>","name":"makeRelativeToProject","module":"Language.Haskell.TH.Syntax.Compat","link":"Language-Haskell-TH-Syntax-Compat.html#v:makeRelativeToProject"}]