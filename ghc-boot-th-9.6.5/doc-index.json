[{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:ForeignSrcLang\">ForeignSrcLang</a><ul class=\"subs\"><li>= <a href=\"#v:LangC\">LangC</a></li><li>| <a href=\"#v:LangCxx\">LangCxx</a></li><li>| <a href=\"#v:LangObjc\">LangObjc</a></li><li>| <a href=\"#v:LangObjcxx\">LangObjcxx</a></li><li>| <a href=\"#v:LangAsm\">LangAsm</a></li><li>| <a href=\"#v:LangJs\">LangJs</a></li><li>| <a href=\"#v:RawObject\">RawObject</a></li></ul>","name":"ForeignSrcLang LangC LangCxx LangObjc LangObjcxx LangAsm LangJs RawObject","module":"GHC.ForeignSrcLang.Type","link":"GHC-ForeignSrcLang-Type.html#t:ForeignSrcLang"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Extension\">Extension</a><ul class=\"subs\"><li>= <a href=\"#v:Cpp\">Cpp</a></li><li>| <a href=\"#v:OverlappingInstances\">OverlappingInstances</a></li><li>| <a href=\"#v:UndecidableInstances\">UndecidableInstances</a></li><li>| <a href=\"#v:IncoherentInstances\">IncoherentInstances</a></li><li>| <a href=\"#v:UndecidableSuperClasses\">UndecidableSuperClasses</a></li><li>| <a href=\"#v:MonomorphismRestriction\">MonomorphismRestriction</a></li><li>| <a href=\"#v:MonoLocalBinds\">MonoLocalBinds</a></li><li>| <a href=\"#v:DeepSubsumption\">DeepSubsumption</a></li><li>| <a href=\"#v:RelaxedPolyRec\">RelaxedPolyRec</a></li><li>| <a href=\"#v:ExtendedDefaultRules\">ExtendedDefaultRules</a></li><li>| <a href=\"#v:ForeignFunctionInterface\">ForeignFunctionInterface</a></li><li>| <a href=\"#v:UnliftedFFITypes\">UnliftedFFITypes</a></li><li>| <a href=\"#v:InterruptibleFFI\">InterruptibleFFI</a></li><li>| <a href=\"#v:CApiFFI\">CApiFFI</a></li><li>| <a href=\"#v:GHCForeignImportPrim\">GHCForeignImportPrim</a></li><li>| <a href=\"#v:JavaScriptFFI\">JavaScriptFFI</a></li><li>| <a href=\"#v:ParallelArrays\">ParallelArrays</a></li><li>| <a href=\"#v:Arrows\">Arrows</a></li><li>| <a href=\"#v:TemplateHaskell\">TemplateHaskell</a></li><li>| <a href=\"#v:TemplateHaskellQuotes\">TemplateHaskellQuotes</a></li><li>| <a href=\"#v:QualifiedDo\">QualifiedDo</a></li><li>| <a href=\"#v:QuasiQuotes\">QuasiQuotes</a></li><li>| <a href=\"#v:ImplicitParams\">ImplicitParams</a></li><li>| <a href=\"#v:ImplicitPrelude\">ImplicitPrelude</a></li><li>| <a href=\"#v:ScopedTypeVariables\">ScopedTypeVariables</a></li><li>| <a href=\"#v:AllowAmbiguousTypes\">AllowAmbiguousTypes</a></li><li>| <a href=\"#v:UnboxedTuples\">UnboxedTuples</a></li><li>| <a href=\"#v:UnboxedSums\">UnboxedSums</a></li><li>| <a href=\"#v:UnliftedNewtypes\">UnliftedNewtypes</a></li><li>| <a href=\"#v:UnliftedDatatypes\">UnliftedDatatypes</a></li><li>| <a href=\"#v:BangPatterns\">BangPatterns</a></li><li>| <a href=\"#v:TypeFamilies\">TypeFamilies</a></li><li>| <a href=\"#v:TypeFamilyDependencies\">TypeFamilyDependencies</a></li><li>| <a href=\"#v:TypeInType\">TypeInType</a></li><li>| <a href=\"#v:OverloadedStrings\">OverloadedStrings</a></li><li>| <a href=\"#v:OverloadedLists\">OverloadedLists</a></li><li>| <a href=\"#v:NumDecimals\">NumDecimals</a></li><li>| <a href=\"#v:DisambiguateRecordFields\">DisambiguateRecordFields</a></li><li>| <a href=\"#v:RecordWildCards\">RecordWildCards</a></li><li>| <a href=\"#v:NamedFieldPuns\">NamedFieldPuns</a></li><li>| <a href=\"#v:ViewPatterns\">ViewPatterns</a></li><li>| <a href=\"#v:GADTs\">GADTs</a></li><li>| <a href=\"#v:GADTSyntax\">GADTSyntax</a></li><li>| <a href=\"#v:NPlusKPatterns\">NPlusKPatterns</a></li><li>| <a href=\"#v:DoAndIfThenElse\">DoAndIfThenElse</a></li><li>| <a href=\"#v:BlockArguments\">BlockArguments</a></li><li>| <a href=\"#v:RebindableSyntax\">RebindableSyntax</a></li><li>| <a href=\"#v:ConstraintKinds\">ConstraintKinds</a></li><li>| <a href=\"#v:PolyKinds\">PolyKinds</a></li><li>| <a href=\"#v:DataKinds\">DataKinds</a></li><li>| <a href=\"#v:TypeData\">TypeData</a></li><li>| <a href=\"#v:InstanceSigs\">InstanceSigs</a></li><li>| <a href=\"#v:ApplicativeDo\">ApplicativeDo</a></li><li>| <a href=\"#v:LinearTypes\">LinearTypes</a></li><li>| <a href=\"#v:StandaloneDeriving\">StandaloneDeriving</a></li><li>| <a href=\"#v:DeriveDataTypeable\">DeriveDataTypeable</a></li><li>| <a href=\"#v:AutoDeriveTypeable\">AutoDeriveTypeable</a></li><li>| <a href=\"#v:DeriveFunctor\">DeriveFunctor</a></li><li>| <a href=\"#v:DeriveTraversable\">DeriveTraversable</a></li><li>| <a href=\"#v:DeriveFoldable\">DeriveFoldable</a></li><li>| <a href=\"#v:DeriveGeneric\">DeriveGeneric</a></li><li>| <a href=\"#v:DefaultSignatures\">DefaultSignatures</a></li><li>| <a href=\"#v:DeriveAnyClass\">DeriveAnyClass</a></li><li>| <a href=\"#v:DeriveLift\">DeriveLift</a></li><li>| <a href=\"#v:DerivingStrategies\">DerivingStrategies</a></li><li>| <a href=\"#v:DerivingVia\">DerivingVia</a></li><li>| <a href=\"#v:TypeSynonymInstances\">TypeSynonymInstances</a></li><li>| <a href=\"#v:FlexibleContexts\">FlexibleContexts</a></li><li>| <a href=\"#v:FlexibleInstances\">FlexibleInstances</a></li><li>| <a href=\"#v:ConstrainedClassMethods\">ConstrainedClassMethods</a></li><li>| <a href=\"#v:MultiParamTypeClasses\">MultiParamTypeClasses</a></li><li>| <a href=\"#v:NullaryTypeClasses\">NullaryTypeClasses</a></li><li>| <a href=\"#v:FunctionalDependencies\">FunctionalDependencies</a></li><li>| <a href=\"#v:UnicodeSyntax\">UnicodeSyntax</a></li><li>| <a href=\"#v:ExistentialQuantification\">ExistentialQuantification</a></li><li>| <a href=\"#v:MagicHash\">MagicHash</a></li><li>| <a href=\"#v:EmptyDataDecls\">EmptyDataDecls</a></li><li>| <a href=\"#v:KindSignatures\">KindSignatures</a></li><li>| <a href=\"#v:RoleAnnotations\">RoleAnnotations</a></li><li>| <a href=\"#v:ParallelListComp\">ParallelListComp</a></li><li>| <a href=\"#v:TransformListComp\">TransformListComp</a></li><li>| <a href=\"#v:MonadComprehensions\">MonadComprehensions</a></li><li>| <a href=\"#v:GeneralizedNewtypeDeriving\">GeneralizedNewtypeDeriving</a></li><li>| <a href=\"#v:RecursiveDo\">RecursiveDo</a></li><li>| <a href=\"#v:PostfixOperators\">PostfixOperators</a></li><li>| <a href=\"#v:TupleSections\">TupleSections</a></li><li>| <a href=\"#v:PatternGuards\">PatternGuards</a></li><li>| <a href=\"#v:LiberalTypeSynonyms\">LiberalTypeSynonyms</a></li><li>| <a href=\"#v:RankNTypes\">RankNTypes</a></li><li>| <a href=\"#v:ImpredicativeTypes\">ImpredicativeTypes</a></li><li>| <a href=\"#v:TypeOperators\">TypeOperators</a></li><li>| <a href=\"#v:ExplicitNamespaces\">ExplicitNamespaces</a></li><li>| <a href=\"#v:PackageImports\">PackageImports</a></li><li>| <a href=\"#v:ExplicitForAll\">ExplicitForAll</a></li><li>| <a href=\"#v:AlternativeLayoutRule\">AlternativeLayoutRule</a></li><li>| <a href=\"#v:AlternativeLayoutRuleTransitional\">AlternativeLayoutRuleTransitional</a></li><li>| <a href=\"#v:DatatypeContexts\">DatatypeContexts</a></li><li>| <a href=\"#v:NondecreasingIndentation\">NondecreasingIndentation</a></li><li>| <a href=\"#v:RelaxedLayout\">RelaxedLayout</a></li><li>| <a href=\"#v:TraditionalRecordSyntax\">TraditionalRecordSyntax</a></li><li>| <a href=\"#v:LambdaCase\">LambdaCase</a></li><li>| <a href=\"#v:MultiWayIf\">MultiWayIf</a></li><li>| <a href=\"#v:BinaryLiterals\">BinaryLiterals</a></li><li>| <a href=\"#v:NegativeLiterals\">NegativeLiterals</a></li><li>| <a href=\"#v:HexFloatLiterals\">HexFloatLiterals</a></li><li>| <a href=\"#v:DuplicateRecordFields\">DuplicateRecordFields</a></li><li>| <a href=\"#v:OverloadedLabels\">OverloadedLabels</a></li><li>| <a href=\"#v:EmptyCase\">EmptyCase</a></li><li>| <a href=\"#v:PatternSynonyms\">PatternSynonyms</a></li><li>| <a href=\"#v:PartialTypeSignatures\">PartialTypeSignatures</a></li><li>| <a href=\"#v:NamedWildCards\">NamedWildCards</a></li><li>| <a href=\"#v:StaticPointers\">StaticPointers</a></li><li>| <a href=\"#v:TypeApplications\">TypeApplications</a></li><li>| <a href=\"#v:Strict\">Strict</a></li><li>| <a href=\"#v:StrictData\">StrictData</a></li><li>| <a href=\"#v:EmptyDataDeriving\">EmptyDataDeriving</a></li><li>| <a href=\"#v:NumericUnderscores\">NumericUnderscores</a></li><li>| <a href=\"#v:QuantifiedConstraints\">QuantifiedConstraints</a></li><li>| <a href=\"#v:StarIsType\">StarIsType</a></li><li>| <a href=\"#v:ImportQualifiedPost\">ImportQualifiedPost</a></li><li>| <a href=\"#v:CUSKs\">CUSKs</a></li><li>| <a href=\"#v:StandaloneKindSignatures\">StandaloneKindSignatures</a></li><li>| <a href=\"#v:LexicalNegation\">LexicalNegation</a></li><li>| <a href=\"#v:FieldSelectors\">FieldSelectors</a></li><li>| <a href=\"#v:OverloadedRecordDot\">OverloadedRecordDot</a></li><li>| <a href=\"#v:OverloadedRecordUpdate\">OverloadedRecordUpdate</a></li></ul>","name":"Extension DeriveGeneric Cpp OverlappingInstances UndecidableInstances IncoherentInstances UndecidableSuperClasses MonomorphismRestriction MonoLocalBinds DeepSubsumption RelaxedPolyRec ExtendedDefaultRules ForeignFunctionInterface UnliftedFFITypes InterruptibleFFI CApiFFI GHCForeignImportPrim JavaScriptFFI ParallelArrays Arrows TemplateHaskell TemplateHaskellQuotes QualifiedDo QuasiQuotes ImplicitParams ImplicitPrelude ScopedTypeVariables AllowAmbiguousTypes UnboxedTuples UnboxedSums UnliftedNewtypes UnliftedDatatypes BangPatterns TypeFamilies TypeFamilyDependencies TypeInType OverloadedStrings OverloadedLists NumDecimals DisambiguateRecordFields RecordWildCards NamedFieldPuns ViewPatterns GADTs GADTSyntax NPlusKPatterns DoAndIfThenElse BlockArguments RebindableSyntax ConstraintKinds PolyKinds DataKinds TypeData InstanceSigs ApplicativeDo LinearTypes StandaloneDeriving DeriveDataTypeable AutoDeriveTypeable DeriveFunctor DeriveTraversable DeriveFoldable DefaultSignatures DeriveAnyClass DeriveLift DerivingStrategies DerivingVia TypeSynonymInstances FlexibleContexts FlexibleInstances ConstrainedClassMethods MultiParamTypeClasses NullaryTypeClasses FunctionalDependencies UnicodeSyntax ExistentialQuantification MagicHash EmptyDataDecls KindSignatures RoleAnnotations ParallelListComp TransformListComp MonadComprehensions GeneralizedNewtypeDeriving RecursiveDo PostfixOperators TupleSections PatternGuards LiberalTypeSynonyms RankNTypes ImpredicativeTypes TypeOperators ExplicitNamespaces PackageImports ExplicitForAll AlternativeLayoutRule AlternativeLayoutRuleTransitional DatatypeContexts NondecreasingIndentation RelaxedLayout TraditionalRecordSyntax LambdaCase MultiWayIf BinaryLiterals NegativeLiterals HexFloatLiterals DuplicateRecordFields OverloadedLabels EmptyCase PatternSynonyms PartialTypeSignatures NamedWildCards StaticPointers TypeApplications Strict StrictData EmptyDataDeriving NumericUnderscores QuantifiedConstraints StarIsType ImportQualifiedPost CUSKs StandaloneKindSignatures LexicalNegation FieldSelectors OverloadedRecordDot OverloadedRecordUpdate","module":"GHC.LanguageExtensions.Type","link":"GHC-LanguageExtensions-Type.html#t:Extension"},{"display_html":"<a href=\"#v:startsVarSym\">startsVarSym</a> :: <a href=\"../base-4.18.2.1/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"startsVarSym","module":"GHC.Lexeme","link":"GHC-Lexeme.html#v:startsVarSym"},{"display_html":"<a href=\"#v:startsVarId\">startsVarId</a> :: <a href=\"../base-4.18.2.1/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"startsVarId","module":"GHC.Lexeme","link":"GHC-Lexeme.html#v:startsVarId"},{"display_html":"<a href=\"#v:startsConSym\">startsConSym</a> :: <a href=\"../base-4.18.2.1/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"startsConSym","module":"GHC.Lexeme","link":"GHC-Lexeme.html#v:startsConSym"},{"display_html":"<a href=\"#v:startsConId\">startsConId</a> :: <a href=\"../base-4.18.2.1/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"startsConId","module":"GHC.Lexeme","link":"GHC-Lexeme.html#v:startsConId"},{"display_html":"<a href=\"#v:startsVarSymASCII\">startsVarSymASCII</a> :: <a href=\"../base-4.18.2.1/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"startsVarSymASCII","module":"GHC.Lexeme","link":"GHC-Lexeme.html#v:startsVarSymASCII"},{"display_html":"<a href=\"#v:isVarSymChar\">isVarSymChar</a> :: <a href=\"../base-4.18.2.1/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"isVarSymChar","module":"GHC.Lexeme","link":"GHC-Lexeme.html#v:isVarSymChar"},{"display_html":"<a href=\"#v:okSymChar\">okSymChar</a> :: <a href=\"../base-4.18.2.1/Data-Char.html#t:Char\" title=\"Data.Char\">Char</a> -&gt; <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a>","name":"okSymChar","module":"GHC.Lexeme","link":"GHC-Lexeme.html#v:okSymChar"}]