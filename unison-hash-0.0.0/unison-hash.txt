-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package unison-hash
@version 0.0.0

module Unison.Hash

-- | A hash.
newtype Hash
Hash :: ShortByteString -> Hash

-- | A hash tagged with the type it's a hash of, useful for maintaining
--   type safety guarantees.
newtype HashFor t
HashFor :: Hash -> HashFor t
[$sel:genericHash:HashFor] :: HashFor t -> Hash
($sel:toShort:Hash) :: Hash -> ShortByteString

-- | Convert a byte string to a hash.
fromByteString :: ByteString -> Hash

-- | Convert a hash to a byte string.
toByteString :: Hash -> ByteString

-- | Convert base32 hex to a hash.
fromBase32Hex :: Base32Hex -> Hash

-- | Convert a hash to base32 hex.
toBase32Hex :: Hash -> Base32Hex

-- | Produce a <a>Hash</a> from a base32hex-encoded version of its binary
--   representation
fromBase32HexText :: Text -> Maybe Hash

-- | Convert a hash from base32 hex without any validation.
unsafeFromBase32HexText :: Text -> Hash

-- | Return the lowercase unpadded base32Hex encoding of this <a>Hash</a>.
--   Multibase prefix would be <tt>v</tt>, see
--   <a>https://github.com/multiformats/multibase</a>
toBase32HexText :: Hash -> Text
instance GHC.Generics.Generic Unison.Hash.Hash
instance GHC.Classes.Ord Unison.Hash.Hash
instance GHC.Classes.Eq Unison.Hash.Hash
instance GHC.Generics.Generic (Unison.Hash.HashFor t)
instance GHC.Classes.Ord (Unison.Hash.HashFor t)
instance GHC.Classes.Eq (Unison.Hash.HashFor t)
instance GHC.Show.Show (Unison.Hash.HashFor t)
instance GHC.Show.Show Unison.Hash.Hash
instance Witch.From.From Unison.Hash.Hash Data.Text.Internal.Text


-- | A 512-bit hash, internally represented as base32hex.
module Unison.Hash32

-- | A 512-bit hash, internally represented as base32hex.
--   
--   Some orphan instances provided in:
--   
--   <ul>
--   <li><pre>unison-util-base32hex-orphans-aeson</pre></li>
--   <li><pre>unison-util-base32hex-orphans-sqlite</pre></li>
--   </ul>
newtype Hash32
UnsafeFromBase32Hex :: Base32Hex -> Hash32
fromHash :: Hash -> Hash32
toHash :: Hash32 -> Hash

-- | Convert base32hex to a hash32 (asserting that it is a 512-bit hash).
unsafeFromBase32Hex :: Base32Hex -> Hash32

-- | Convert a hash32 to base32hex.
toBase32Hex :: Hash32 -> Base32Hex
toText :: Hash32 -> Text
instance GHC.Show.Show Unison.Hash32.Hash32
instance GHC.Classes.Ord Unison.Hash32.Hash32
instance GHC.Classes.Eq Unison.Hash32.Hash32
instance Witch.From.From Unison.Hash32.Hash32 Data.Text.Internal.Text
instance Witch.From.From Unison.Hash32.Hash32 Unison.Hash.Hash
instance Witch.From.From Unison.Hash.Hash Unison.Hash32.Hash32
