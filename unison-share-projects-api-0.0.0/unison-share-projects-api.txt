-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


@package unison-share-projects-api
@version 0.0.0


-- | Hash-related types in the Share API.
module Unison.Share.API.Hash
newtype HashJWT
HashJWT :: Text -> HashJWT
[$sel:unHashJWT:HashJWT] :: HashJWT -> Text

-- | Grab the hash out of a hash JWT.
--   
--   This decodes the whole JWT, then throws away the claims; use it if you
--   really only need the hash!
hashJWTHash :: HashJWT -> Hash32
data HashJWTClaims
HashJWTClaims :: Hash32 -> Maybe Text -> HashJWTClaims
[$sel:hash:HashJWTClaims] :: HashJWTClaims -> Hash32
[$sel:userId:HashJWTClaims] :: HashJWTClaims -> Maybe Text

-- | A decoded hash JWT that retains the original encoded JWT.
data DecodedHashJWT
DecodedHashJWT :: HashJWTClaims -> HashJWT -> DecodedHashJWT
[$sel:claims:DecodedHashJWT] :: DecodedHashJWT -> HashJWTClaims
[$sel:hashJWT:DecodedHashJWT] :: DecodedHashJWT -> HashJWT

-- | Decode a hash JWT.
decodeHashJWT :: HashJWT -> DecodedHashJWT

-- | Decode the claims out of a hash JWT.
decodeHashJWTClaims :: HashJWT -> HashJWTClaims

-- | Grab the hash out of a decoded hash JWT.
decodedHashJWTHash :: DecodedHashJWT -> Hash32
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Hash.HashJWT
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Hash.HashJWT
instance GHC.Classes.Ord Unison.Share.API.Hash.HashJWT
instance GHC.Classes.Eq Unison.Share.API.Hash.HashJWT
instance GHC.Show.Show Unison.Share.API.Hash.HashJWT
instance GHC.Classes.Ord Unison.Share.API.Hash.HashJWTClaims
instance GHC.Classes.Eq Unison.Share.API.Hash.HashJWTClaims
instance GHC.Show.Show Unison.Share.API.Hash.HashJWTClaims
instance GHC.Show.Show Unison.Share.API.Hash.DecodedHashJWT
instance GHC.Classes.Ord Unison.Share.API.Hash.DecodedHashJWT
instance GHC.Classes.Eq Unison.Share.API.Hash.DecodedHashJWT
instance Servant.Auth.JWT.ToJWT Unison.Share.API.Hash.HashJWTClaims
instance Servant.Auth.JWT.FromJWT Unison.Share.API.Hash.HashJWTClaims
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Hash.HashJWTClaims
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Hash.HashJWTClaims

module Unison.Share.API.Projects
type ProjectsAPI = GetProjectAPI :<|> CreateProjectAPI :<|> GetProjectBranchAPI :<|> CreateProjectBranchAPI :<|> SetProjectBranchHeadAPI

-- | <ul>
--   <li><i><tt>GET /project?id=XXX</tt></i> Get a project by id.</li>
--   <li><i><tt>GET /project?name=XXX</tt></i> Get a project by name.</li>
--   </ul>
type GetProjectAPI = "project" :> QueryParam "id" Text :> QueryParam "name" Text :> Verb 'GET 200 '[JSON] GetProjectResponse

-- | <tt>GET /project</tt> response.
data GetProjectResponse
GetProjectResponseNotFound :: NotFound -> GetProjectResponse
GetProjectResponseUnauthorized :: Unauthorized -> GetProjectResponse
GetProjectResponseSuccess :: !Project -> GetProjectResponse

-- | <ul>
--   <li><i><tt>POST /create-project</tt></i> Create a project</li>
--   </ul>
type CreateProjectAPI = "create-project" :> ReqBody '[JSON] CreateProjectRequest :> Verb 'POST 200 '[JSON] CreateProjectResponse

-- | <tt>POST /create-project</tt> request.
data CreateProjectRequest
CreateProjectRequest :: Text -> CreateProjectRequest
[$sel:projectName:CreateProjectRequest] :: CreateProjectRequest -> Text

-- | <tt>POST /create-project</tt> response.
data CreateProjectResponse
CreateProjectResponseUnauthorized :: Unauthorized -> CreateProjectResponse
CreateProjectResponseNotFound :: !NotFound -> CreateProjectResponse
CreateProjectResponseSuccess :: !Project -> CreateProjectResponse

-- | <ul>
--   <li><i><tt>GET /project-branch?projectId=XXX&amp;branchId=YYY</tt></i>
--   Get a project branch by id.</li>
--   <li><i><tt>GET
--   /project-branch?projectId=XXX&amp;branchName=YYY</tt></i> Get a
--   project branch by name.</li>
--   </ul>
type GetProjectBranchAPI = "project-branch" :> QueryParam' '[Required, Strict] "projectId" Text :> QueryParam "branchId" Text :> QueryParam "branchName" Text :> QueryFlag "includeSquashed" :> Verb 'GET 200 '[JSON] GetProjectBranchResponse

-- | <tt>GET /project-branch</tt> response.
data GetProjectBranchResponse
GetProjectBranchResponseProjectNotFound :: NotFound -> GetProjectBranchResponse
GetProjectBranchResponseBranchNotFound :: NotFound -> GetProjectBranchResponse
GetProjectBranchResponseUnauthorized :: Unauthorized -> GetProjectBranchResponse
GetProjectBranchResponseSuccess :: !ProjectBranch -> GetProjectBranchResponse

-- | <ul>
--   <li><i><tt>POST /create-project-branch</tt></i> Create a project
--   branch</li>
--   </ul>
type CreateProjectBranchAPI = "create-project-branch" :> ReqBody '[JSON] CreateProjectBranchRequest :> Verb 'POST 200 '[JSON] CreateProjectBranchResponse

-- | <tt>POST /create-project-branch</tt> request.
data CreateProjectBranchRequest
CreateProjectBranchRequest :: Text -> Text -> Hash32 -> Maybe ProjectBranchIds -> CreateProjectBranchRequest
[$sel:projectId:CreateProjectBranchRequest] :: CreateProjectBranchRequest -> Text
[$sel:branchName:CreateProjectBranchRequest] :: CreateProjectBranchRequest -> Text
[$sel:branchCausalHash:CreateProjectBranchRequest] :: CreateProjectBranchRequest -> Hash32
[$sel:branchMergeTarget:CreateProjectBranchRequest] :: CreateProjectBranchRequest -> Maybe ProjectBranchIds

-- | <tt>POST /create-project-branch</tt> response.
data CreateProjectBranchResponse
CreateProjectBranchResponseUnauthorized :: Unauthorized -> CreateProjectBranchResponse
CreateProjectBranchResponseNotFound :: NotFound -> CreateProjectBranchResponse
CreateProjectBranchResponseMissingCausalHash :: !Hash32 -> CreateProjectBranchResponse
CreateProjectBranchResponseSuccess :: !ProjectBranch -> CreateProjectBranchResponse

-- | <ul>
--   <li><i><tt>POST /set-project-branch-head</tt></i> Make a project
--   branch point at an already-uploaded causal</li>
--   </ul>
type SetProjectBranchHeadAPI = "set-project-branch-head" :> ReqBody '[JSON] SetProjectBranchHeadRequest :> Verb 'POST 200 '[JSON] SetProjectBranchHeadResponse

-- | <tt>POST /set-project-branch-head</tt> request.
data SetProjectBranchHeadRequest
SetProjectBranchHeadRequest :: Text -> Text -> Maybe Hash32 -> Hash32 -> SetProjectBranchHeadRequest
[$sel:projectId:SetProjectBranchHeadRequest] :: SetProjectBranchHeadRequest -> Text
[$sel:branchId:SetProjectBranchHeadRequest] :: SetProjectBranchHeadRequest -> Text

-- | If <tt>Nothing</tt>, just set (force-push semantics). If
--   <tt>Just</tt>, check-and-set (push-with-lease).
[$sel:branchOldCausalHash:SetProjectBranchHeadRequest] :: SetProjectBranchHeadRequest -> Maybe Hash32
[$sel:branchNewCausalHash:SetProjectBranchHeadRequest] :: SetProjectBranchHeadRequest -> Hash32

-- | <tt>POST /set-project-branch-hash</tt> response.
data SetProjectBranchHeadResponse
SetProjectBranchHeadResponseUnauthorized :: Unauthorized -> SetProjectBranchHeadResponse
SetProjectBranchHeadResponseNotFound :: NotFound -> SetProjectBranchHeadResponse
SetProjectBranchHeadResponseMissingCausalHash :: !Hash32 -> SetProjectBranchHeadResponse

-- | (expected, actual)
SetProjectBranchHeadResponseExpectedCausalHashMismatch :: !Hash32 -> !Hash32 -> SetProjectBranchHeadResponse
SetProjectBranchHeadResponsePublishedReleaseIsImmutable :: SetProjectBranchHeadResponse
SetProjectBranchHeadResponseDeprecatedReleaseIsImmutable :: SetProjectBranchHeadResponse
SetProjectBranchHeadResponseSuccess :: SetProjectBranchHeadResponse

-- | A project.
data Project
Project :: Text -> Text -> Maybe ReleaseVersion -> Maybe BranchName -> Project
[$sel:projectId:Project] :: Project -> Text
[$sel:projectName:Project] :: Project -> Text
[$sel:latestRelease:Project] :: Project -> Maybe ReleaseVersion
[$sel:defaultBranch:Project] :: Project -> Maybe BranchName

-- | A project branch.
data ProjectBranch
ProjectBranch :: Text -> Text -> Text -> Text -> HashJWT -> Maybe HashJWT -> ProjectBranch
[$sel:projectId:ProjectBranch] :: ProjectBranch -> Text
[$sel:projectName:ProjectBranch] :: ProjectBranch -> Text
[$sel:branchId:ProjectBranch] :: ProjectBranch -> Text
[$sel:branchName:ProjectBranch] :: ProjectBranch -> Text
[$sel:branchHead:ProjectBranch] :: ProjectBranch -> HashJWT
[$sel:squashedBranchHead:ProjectBranch] :: ProjectBranch -> Maybe HashJWT

-- | A project id and branch id.
data ProjectBranchIds
ProjectBranchIds :: Text -> Text -> ProjectBranchIds
[$sel:projectId:ProjectBranchIds] :: ProjectBranchIds -> Text
[$sel:branchId:ProjectBranchIds] :: ProjectBranchIds -> Text
data NotFound
NotFound :: Text -> NotFound
[$sel:message:NotFound] :: NotFound -> Text
data Unauthorized
Unauthorized :: Text -> Unauthorized
[$sel:message:Unauthorized] :: Unauthorized -> Text

-- | A project branch name segment. Does not contain a project or
--   contributor segment.
--   
--   E.g. "main"
type BranchName = Text
instance GHC.Generics.Generic Unison.Share.API.Projects.CreateProjectRequest
instance GHC.Show.Show Unison.Share.API.Projects.CreateProjectRequest
instance GHC.Classes.Eq Unison.Share.API.Projects.CreateProjectRequest
instance GHC.Generics.Generic Unison.Share.API.Projects.SetProjectBranchHeadRequest
instance GHC.Show.Show Unison.Share.API.Projects.SetProjectBranchHeadRequest
instance GHC.Classes.Eq Unison.Share.API.Projects.SetProjectBranchHeadRequest
instance GHC.Generics.Generic Unison.Share.API.Projects.Project
instance GHC.Show.Show Unison.Share.API.Projects.Project
instance GHC.Classes.Eq Unison.Share.API.Projects.Project
instance GHC.Generics.Generic Unison.Share.API.Projects.ProjectBranch
instance GHC.Show.Show Unison.Share.API.Projects.ProjectBranch
instance GHC.Classes.Eq Unison.Share.API.Projects.ProjectBranch
instance GHC.Generics.Generic Unison.Share.API.Projects.ProjectBranchIds
instance GHC.Show.Show Unison.Share.API.Projects.ProjectBranchIds
instance GHC.Classes.Eq Unison.Share.API.Projects.ProjectBranchIds
instance GHC.Generics.Generic Unison.Share.API.Projects.CreateProjectBranchRequest
instance GHC.Show.Show Unison.Share.API.Projects.CreateProjectBranchRequest
instance GHC.Classes.Eq Unison.Share.API.Projects.CreateProjectBranchRequest
instance GHC.Generics.Generic Unison.Share.API.Projects.NotFound
instance GHC.Show.Show Unison.Share.API.Projects.NotFound
instance GHC.Classes.Eq Unison.Share.API.Projects.NotFound
instance GHC.Generics.Generic Unison.Share.API.Projects.Unauthorized
instance GHC.Show.Show Unison.Share.API.Projects.Unauthorized
instance GHC.Classes.Eq Unison.Share.API.Projects.Unauthorized
instance GHC.Generics.Generic Unison.Share.API.Projects.SetProjectBranchHeadResponse
instance GHC.Show.Show Unison.Share.API.Projects.SetProjectBranchHeadResponse
instance GHC.Classes.Eq Unison.Share.API.Projects.SetProjectBranchHeadResponse
instance GHC.Generics.Generic Unison.Share.API.Projects.CreateProjectBranchResponse
instance GHC.Show.Show Unison.Share.API.Projects.CreateProjectBranchResponse
instance GHC.Classes.Eq Unison.Share.API.Projects.CreateProjectBranchResponse
instance GHC.Generics.Generic Unison.Share.API.Projects.GetProjectBranchResponse
instance GHC.Show.Show Unison.Share.API.Projects.GetProjectBranchResponse
instance GHC.Classes.Eq Unison.Share.API.Projects.GetProjectBranchResponse
instance GHC.Generics.Generic Unison.Share.API.Projects.CreateProjectResponse
instance GHC.Show.Show Unison.Share.API.Projects.CreateProjectResponse
instance GHC.Classes.Eq Unison.Share.API.Projects.CreateProjectResponse
instance GHC.Generics.Generic Unison.Share.API.Projects.GetProjectResponse
instance GHC.Show.Show Unison.Share.API.Projects.GetProjectResponse
instance GHC.Classes.Eq Unison.Share.API.Projects.GetProjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.GetProjectResponse
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.GetProjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.CreateProjectResponse
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.CreateProjectResponse
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.GetProjectBranchResponse
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.GetProjectBranchResponse
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.CreateProjectBranchResponse
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.CreateProjectBranchResponse
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.SetProjectBranchHeadResponse
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.SetProjectBranchHeadResponse
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.Unauthorized
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.Unauthorized
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.NotFound
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.NotFound
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.CreateProjectBranchRequest
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.CreateProjectBranchRequest
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.ProjectBranchIds
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.ProjectBranchIds
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.ProjectBranch
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.ProjectBranch
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.Project
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.Project
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.SetProjectBranchHeadRequest
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.SetProjectBranchHeadRequest
instance Data.Aeson.Types.FromJSON.FromJSON Unison.Share.API.Projects.CreateProjectRequest
instance Data.Aeson.Types.ToJSON.ToJSON Unison.Share.API.Projects.CreateProjectRequest
