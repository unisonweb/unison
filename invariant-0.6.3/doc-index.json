[{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Invariant\">Invariant</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:invmap\">invmap</a> :: (a -&gt; b) -&gt; (b -&gt; a) -&gt; f a -&gt; f b</li></ul>","name":"Invariant invmap","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:Invariant"},{"display_html":"<a href=\"#v:invmapFunctor\">invmapFunctor</a> :: <a href=\"../base-4.18.2.1/Data-Functor.html#t:Functor\" title=\"Data.Functor\">Functor</a> f =&gt; (a -&gt; b) -&gt; (b -&gt; a) -&gt; f a -&gt; f b","name":"invmapFunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#v:invmapFunctor"},{"display_html":"<a href=\"#v:genericInvmap\">genericInvmap</a> :: (<a href=\"../base-4.18.2.1/GHC-Generics.html#t:Generic1\" title=\"GHC.Generics\">Generic1</a> f, <a href=\"Data-Functor-Invariant.html#t:Invariant\" title=\"Data.Functor.Invariant\">Invariant</a> (<a href=\"../base-4.18.2.1/GHC-Generics.html#t:Rep1\" title=\"GHC.Generics\">Rep1</a> f)) =&gt; (a -&gt; b) -&gt; (b -&gt; a) -&gt; f a -&gt; f b","name":"genericInvmap","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#v:genericInvmap"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WrappedFunctor\">WrappedFunctor</a> f a = <a href=\"#v:WrapFunctor\">WrapFunctor</a> {<ul class=\"subs\"><li><a href=\"#v:unwrapFunctor\">unwrapFunctor</a> :: f a</li></ul>}","name":"WrappedFunctor WrapFunctor unwrapFunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:WrappedFunctor"},{"display_html":"<a href=\"#v:invmapContravariant\">invmapContravariant</a> :: <a href=\"../base-4.18.2.1/Data-Functor-Contravariant.html#t:Contravariant\" title=\"Data.Functor.Contravariant\">Contravariant</a> f =&gt; (a -&gt; b) -&gt; (b -&gt; a) -&gt; f a -&gt; f b","name":"invmapContravariant","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#v:invmapContravariant"},{"display_html":"<a href=\"#v:invmapProfunctor\">invmapProfunctor</a> :: <a href=\"../profunctors-5.6.2/Data-Profunctor-Unsafe.html#t:Profunctor\" title=\"Data.Profunctor.Unsafe\">Profunctor</a> p =&gt; (a -&gt; b) -&gt; (b -&gt; a) -&gt; p a a -&gt; p b b","name":"invmapProfunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#v:invmapProfunctor"},{"display_html":"<a href=\"#v:invmapArrow\">invmapArrow</a> :: <a href=\"../base-4.18.2.1/Control-Arrow.html#t:Arrow\" title=\"Control.Arrow\">Arrow</a> arr =&gt; (a -&gt; b) -&gt; (b -&gt; a) -&gt; arr a a -&gt; arr b b","name":"invmapArrow","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#v:invmapArrow"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WrappedContravariant\">WrappedContravariant</a> f a = <a href=\"#v:WrapContravariant\">WrapContravariant</a> {<ul class=\"subs\"><li><a href=\"#v:unwrapContravariant\">unwrapContravariant</a> :: f a</li></ul>}","name":"WrappedContravariant WrapContravariant unwrapContravariant","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:WrappedContravariant"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:InvariantProfunctor\">InvariantProfunctor</a> p a = <a href=\"#v:InvariantProfunctor\">InvariantProfunctor</a> (p a a)","name":"InvariantProfunctor InvariantProfunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:InvariantProfunctor"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:InvariantArrow\">InvariantArrow</a> c a = <a href=\"#v:InvariantArrow\">InvariantArrow</a> (c a a)","name":"InvariantArrow InvariantArrow","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:InvariantArrow"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:Invariant2\">Invariant2</a> f <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:invmap2\">invmap2</a> :: (a -&gt; c) -&gt; (c -&gt; a) -&gt; (b -&gt; d) -&gt; (d -&gt; b) -&gt; f a b -&gt; f c d</li></ul>","name":"Invariant2 invmap2","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:Invariant2"},{"display_html":"<a href=\"#v:invmap2Bifunctor\">invmap2Bifunctor</a> :: <a href=\"../base-4.18.2.1/Data-Bifunctor.html#t:Bifunctor\" title=\"Data.Bifunctor\">Bifunctor</a> f =&gt; (a -&gt; c) -&gt; (c -&gt; a) -&gt; (b -&gt; d) -&gt; (d -&gt; b) -&gt; f a b -&gt; f c d","name":"invmap2Bifunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#v:invmap2Bifunctor"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WrappedBifunctor\">WrappedBifunctor</a> (p :: k -&gt; k1 -&gt; <a href=\"../base-4.18.2.1/Data-Kind.html#t:Type\" title=\"Data.Kind\">Type</a>) (a :: k) (b :: k1) = <a href=\"#v:WrapBifunctor\">WrapBifunctor</a> {<ul class=\"subs\"><li><a href=\"#v:unwrapBifunctor\">unwrapBifunctor</a> :: p a b</li></ul>}","name":"WrappedBifunctor WrapBifunctor unwrapBifunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:WrappedBifunctor"},{"display_html":"<a href=\"#v:invmap2Profunctor\">invmap2Profunctor</a> :: <a href=\"../profunctors-5.6.2/Data-Profunctor-Unsafe.html#t:Profunctor\" title=\"Data.Profunctor.Unsafe\">Profunctor</a> f =&gt; (a -&gt; c) -&gt; (c -&gt; a) -&gt; (b -&gt; d) -&gt; (d -&gt; b) -&gt; f a b -&gt; f c d","name":"invmap2Profunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#v:invmap2Profunctor"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:WrappedProfunctor\">WrappedProfunctor</a> p a b = <a href=\"#v:WrapProfunctor\">WrapProfunctor</a> {<ul class=\"subs\"><li><a href=\"#v:unwrapProfunctor\">unwrapProfunctor</a> :: p a b</li></ul>}","name":"WrappedProfunctor WrapProfunctor unwrapProfunctor","module":"Data.Functor.Invariant","link":"Data-Functor-Invariant.html#t:WrappedProfunctor"},{"display_html":"<a href=\"#v:deriveInvariant\">deriveInvariant</a> :: <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveInvariant","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:deriveInvariant"},{"display_html":"<a href=\"#v:deriveInvariantOptions\">deriveInvariantOptions</a> :: <a href=\"Data-Functor-Invariant-TH.html#t:Options\" title=\"Data.Functor.Invariant.TH\">Options</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveInvariantOptions","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:deriveInvariantOptions"},{"display_html":"<a href=\"#v:deriveInvariant2\">deriveInvariant2</a> :: <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveInvariant2","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:deriveInvariant2"},{"display_html":"<a href=\"#v:deriveInvariant2Options\">deriveInvariant2Options</a> :: <a href=\"Data-Functor-Invariant-TH.html#t:Options\" title=\"Data.Functor.Invariant.TH\">Options</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> [<a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Dec\" title=\"Language.Haskell.TH.Syntax\">Dec</a>]","name":"deriveInvariant2Options","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:deriveInvariant2Options"},{"display_html":"<a href=\"#v:makeInvmap\">makeInvmap</a> :: <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"makeInvmap","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:makeInvmap"},{"display_html":"<a href=\"#v:makeInvmapOptions\">makeInvmapOptions</a> :: <a href=\"Data-Functor-Invariant-TH.html#t:Options\" title=\"Data.Functor.Invariant.TH\">Options</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"makeInvmapOptions","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:makeInvmapOptions"},{"display_html":"<a href=\"#v:makeInvmap2\">makeInvmap2</a> :: <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"makeInvmap2","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:makeInvmap2"},{"display_html":"<a href=\"#v:makeInvmap2Options\">makeInvmap2Options</a> :: <a href=\"Data-Functor-Invariant-TH.html#t:Options\" title=\"Data.Functor.Invariant.TH\">Options</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Name\" title=\"Language.Haskell.TH.Syntax\">Name</a> -&gt; <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Q\" title=\"Language.Haskell.TH.Syntax\">Q</a> <a href=\"../template-haskell-2.20.0.0/Language-Haskell-TH-Syntax.html#t:Exp\" title=\"Language.Haskell.TH.Syntax\">Exp</a>","name":"makeInvmap2Options","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:makeInvmap2Options"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Options\">Options</a> = <a href=\"#v:Options\">Options</a> {<ul class=\"subs\"><li><a href=\"#v:emptyCaseBehavior\">emptyCaseBehavior</a> :: <a href=\"../base-4.18.2.1/Data-Bool.html#t:Bool\" title=\"Data.Bool\">Bool</a></li></ul>}","name":"Options Options emptyCaseBehavior","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#t:Options"},{"display_html":"<a href=\"#v:defaultOptions\">defaultOptions</a> :: <a href=\"Data-Functor-Invariant-TH.html#t:Options\" title=\"Data.Functor.Invariant.TH\">Options</a>","name":"defaultOptions","module":"Data.Functor.Invariant.TH","link":"Data-Functor-Invariant-TH.html#v:defaultOptions"}]