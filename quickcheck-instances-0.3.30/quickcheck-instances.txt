-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Common quickcheck instances
--   
--   QuickCheck instances.
--   
--   The goal is to supply QuickCheck instances for types provided by the
--   Haskell Platform.
--   
--   Since all of these instances are provided as orphans, I recommend that
--   you do not use this library within another library module, so that you
--   don't impose these instances on down-stream consumers of your code.
@package quickcheck-instances
@version 0.3.30

module Test.QuickCheck.Instances.Array.Byte

module Test.QuickCheck.Instances.Containers

module Test.QuickCheck.Instances.CaseInsensitive
instance (Data.CaseInsensitive.Internal.FoldCase a, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.CaseInsensitive.Internal.CI a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.CaseInsensitive.Internal.CI a)
instance (Data.CaseInsensitive.Internal.FoldCase a, Test.QuickCheck.Function.Function a) => Test.QuickCheck.Function.Function (Data.CaseInsensitive.Internal.CI a)

module Test.QuickCheck.Instances.ByteString
instance Test.QuickCheck.Arbitrary.Arbitrary Data.ByteString.Internal.Type.ByteString
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.ByteString.Internal.Type.ByteString
instance Test.QuickCheck.Function.Function Data.ByteString.Internal.Type.ByteString
instance Test.QuickCheck.Arbitrary.Arbitrary Data.ByteString.Lazy.Internal.ByteString
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.ByteString.Lazy.Internal.ByteString
instance Test.QuickCheck.Function.Function Data.ByteString.Lazy.Internal.ByteString
instance Test.QuickCheck.Arbitrary.Arbitrary Data.ByteString.Short.Internal.ShortByteString
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.ByteString.Short.Internal.ShortByteString
instance Test.QuickCheck.Function.Function Data.ByteString.Short.Internal.ShortByteString

module Test.QuickCheck.Instances.Array
instance (GHC.Num.Num i, GHC.Ix.Ix i, Test.QuickCheck.Arbitrary.Arbitrary i) => Test.QuickCheck.Arbitrary.Arbitrary1 (GHC.Arr.Array i)
instance (GHC.Num.Num i, GHC.Ix.Ix i, Test.QuickCheck.Arbitrary.Arbitrary i, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (GHC.Arr.Array i a)
instance (GHC.Ix.Ix i, Test.QuickCheck.Arbitrary.CoArbitrary i, Test.QuickCheck.Arbitrary.CoArbitrary a) => Test.QuickCheck.Arbitrary.CoArbitrary (GHC.Arr.Array i a)
instance (GHC.Num.Num i, GHC.Ix.Ix i, Data.Array.Base.IArray Data.Array.Base.UArray a, Test.QuickCheck.Arbitrary.Arbitrary i, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Array.Base.UArray i a)
instance (GHC.Ix.Ix i, Data.Array.Base.IArray Data.Array.Base.UArray a, Test.QuickCheck.Arbitrary.CoArbitrary i, Test.QuickCheck.Arbitrary.CoArbitrary a) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Array.Base.UArray i a)

module Test.QuickCheck.Instances.DataFix
instance Test.QuickCheck.Arbitrary.Arbitrary1 f => Test.QuickCheck.Arbitrary.Arbitrary (Data.Fix.Fix f)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, GHC.Base.Functor f) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Fix.Mu f)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, GHC.Base.Functor f) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Fix.Nu f)

module Test.QuickCheck.Instances.Hashable
instance (Data.Hashable.Class.Hashable a, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Hashable.Class.Hashed a)
instance Test.QuickCheck.Arbitrary.CoArbitrary (Data.Hashable.Class.Hashed a)

module Test.QuickCheck.Instances.Natural
instance Test.QuickCheck.Arbitrary.Arbitrary GHC.Num.Natural.Natural
instance Test.QuickCheck.Arbitrary.CoArbitrary GHC.Num.Natural.Natural
instance Test.QuickCheck.Function.Function GHC.Num.Natural.Natural

module Test.QuickCheck.Instances.OldTime
instance Test.QuickCheck.Arbitrary.Arbitrary System.Time.Month
instance Test.QuickCheck.Arbitrary.CoArbitrary System.Time.Month
instance Test.QuickCheck.Arbitrary.Arbitrary System.Time.Day
instance Test.QuickCheck.Arbitrary.CoArbitrary System.Time.Day
instance Test.QuickCheck.Arbitrary.Arbitrary System.Time.ClockTime
instance Test.QuickCheck.Arbitrary.CoArbitrary System.Time.ClockTime
instance Test.QuickCheck.Arbitrary.Arbitrary System.Time.TimeDiff
instance Test.QuickCheck.Arbitrary.CoArbitrary System.Time.TimeDiff
instance Test.QuickCheck.Arbitrary.Arbitrary System.Time.CalendarTime
instance Test.QuickCheck.Arbitrary.CoArbitrary System.Time.CalendarTime

module Test.QuickCheck.Instances.Primitive
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Array.Byte.ByteArray
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Array.Byte.ByteArray
instance Test.QuickCheck.Function.Function Data.Array.Byte.ByteArray

module Test.QuickCheck.Instances.Scientific
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Scientific.Scientific
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Scientific.Scientific
instance Test.QuickCheck.Function.Function Data.Scientific.Scientific

module Test.QuickCheck.Instances.Semigroup
instance Test.QuickCheck.Arbitrary.Arbitrary1 GHC.Base.NonEmpty
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (GHC.Base.NonEmpty a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (GHC.Base.NonEmpty a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (GHC.Base.NonEmpty a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Semigroup.Min
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Semigroup.Min a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Semigroup.Min a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Data.Semigroup.Min a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Semigroup.Max
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Semigroup.Max a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Semigroup.Max a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Data.Semigroup.Max a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Semigroup.First
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Semigroup.First a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Semigroup.First a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Data.Semigroup.First a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Semigroup.Last
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Semigroup.Last a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Semigroup.Last a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Data.Semigroup.Last a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Semigroup.WrappedMonoid
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Semigroup.WrappedMonoid a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Semigroup.WrappedMonoid a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Data.Semigroup.WrappedMonoid a)

module Test.QuickCheck.Instances.Solo
instance Test.QuickCheck.Arbitrary.Arbitrary1 Solo
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Solo a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Solo a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Solo a)

module Test.QuickCheck.Instances.Strict
instance Test.QuickCheck.Arbitrary.Arbitrary2 Data.Strict.Tuple.Pair
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.Strict.Tuple.Pair a)
instance (Test.QuickCheck.Arbitrary.Arbitrary a, Test.QuickCheck.Arbitrary.Arbitrary b) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Strict.Tuple.Pair a b)
instance (Test.QuickCheck.Function.Function a, Test.QuickCheck.Function.Function b) => Test.QuickCheck.Function.Function (Data.Strict.Tuple.Pair a b)
instance (Test.QuickCheck.Arbitrary.CoArbitrary a, Test.QuickCheck.Arbitrary.CoArbitrary b) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Strict.Tuple.Pair a b)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Strict.Maybe.Maybe
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Strict.Maybe.Maybe a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Data.Strict.Maybe.Maybe a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Strict.Maybe.Maybe a)
instance Test.QuickCheck.Arbitrary.Arbitrary2 Data.Strict.Either.Either
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.Strict.Either.Either a)
instance (Test.QuickCheck.Arbitrary.Arbitrary a, Test.QuickCheck.Arbitrary.Arbitrary b) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Strict.Either.Either a b)
instance (Test.QuickCheck.Function.Function a, Test.QuickCheck.Function.Function b) => Test.QuickCheck.Function.Function (Data.Strict.Either.Either a b)
instance (Test.QuickCheck.Arbitrary.CoArbitrary a, Test.QuickCheck.Arbitrary.CoArbitrary b) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Strict.Either.Either a b)
instance Test.QuickCheck.Arbitrary.Arbitrary2 Data.Strict.These.These
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.Strict.These.These a)
instance (Test.QuickCheck.Arbitrary.Arbitrary a, Test.QuickCheck.Arbitrary.Arbitrary b) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Strict.These.These a b)
instance (Test.QuickCheck.Function.Function a, Test.QuickCheck.Function.Function b) => Test.QuickCheck.Function.Function (Data.Strict.These.These a b)
instance (Test.QuickCheck.Arbitrary.CoArbitrary a, Test.QuickCheck.Arbitrary.CoArbitrary b) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Strict.These.These a b)

module Test.QuickCheck.Instances.Tagged
instance Test.QuickCheck.Arbitrary.Arbitrary2 Data.Tagged.Tagged
instance forall k (a :: k). Test.QuickCheck.Arbitrary.Arbitrary1 (Data.Tagged.Tagged a)
instance forall k b (a :: k). Test.QuickCheck.Arbitrary.Arbitrary b => Test.QuickCheck.Arbitrary.Arbitrary (Data.Tagged.Tagged a b)
instance forall k b (a :: k). Test.QuickCheck.Arbitrary.CoArbitrary b => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Tagged.Tagged a b)
instance forall k b (a :: k). Test.QuickCheck.Function.Function b => Test.QuickCheck.Function.Function (Data.Tagged.Tagged a b)
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Proxy.Proxy
instance forall k (a :: k). Test.QuickCheck.Arbitrary.Arbitrary (Data.Proxy.Proxy a)
instance forall k (a :: k). Test.QuickCheck.Arbitrary.CoArbitrary (Data.Proxy.Proxy a)
instance forall k (a :: k). Test.QuickCheck.Function.Function (Data.Proxy.Proxy a)

module Test.QuickCheck.Instances.Text
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Text.Internal.Text
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Text.Internal.Lazy.Text
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Text.Internal.Text
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Text.Internal.Lazy.Text
instance Test.QuickCheck.Function.Function Data.Text.Internal.Text
instance Test.QuickCheck.Function.Function Data.Text.Internal.Lazy.Text

module Test.QuickCheck.Instances.Text.Short
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Text.Short.Internal.ShortText
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Text.Short.Internal.ShortText
instance Test.QuickCheck.Function.Function Data.Text.Short.Internal.ShortText

module Test.QuickCheck.Instances.These
instance Test.QuickCheck.Arbitrary.Arbitrary2 Data.These.These
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.These.These a)
instance (Test.QuickCheck.Arbitrary.Arbitrary a, Test.QuickCheck.Arbitrary.Arbitrary b) => Test.QuickCheck.Arbitrary.Arbitrary (Data.These.These a b)
instance (Test.QuickCheck.Function.Function a, Test.QuickCheck.Function.Function b) => Test.QuickCheck.Function.Function (Data.These.These a b)
instance (Test.QuickCheck.Arbitrary.CoArbitrary a, Test.QuickCheck.Arbitrary.CoArbitrary b) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.These.These a b)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, Test.QuickCheck.Arbitrary.Arbitrary1 g) => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.Functor.These.These1 f g)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, Test.QuickCheck.Arbitrary.Arbitrary1 g, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Functor.These.These1 f g a)

module Test.QuickCheck.Instances.Time
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Calendar.Days.Day
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Calendar.Days.Day
instance Test.QuickCheck.Function.Function Data.Time.Calendar.Days.Day
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Clock.Internal.UniversalTime.UniversalTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Clock.Internal.UniversalTime.UniversalTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Clock.Internal.DiffTime.DiffTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Clock.Internal.DiffTime.DiffTime
instance Test.QuickCheck.Function.Function Data.Time.Clock.Internal.DiffTime.DiffTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Clock.Internal.UTCTime.UTCTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Clock.Internal.UTCTime.UTCTime
instance Test.QuickCheck.Function.Function Data.Time.Clock.Internal.UTCTime.UTCTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime
instance Test.QuickCheck.Function.Function Data.Time.Clock.Internal.NominalDiffTime.NominalDiffTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.LocalTime.Internal.TimeZone.TimeZone
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.LocalTime.Internal.TimeZone.TimeZone
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.LocalTime.Internal.TimeOfDay.TimeOfDay
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.LocalTime.Internal.LocalTime.LocalTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.LocalTime.Internal.LocalTime.LocalTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.LocalTime.Internal.ZonedTime.ZonedTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.LocalTime.Internal.ZonedTime.ZonedTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Clock.Internal.AbsoluteTime.AbsoluteTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Clock.Internal.AbsoluteTime.AbsoluteTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Calendar.Week.DayOfWeek
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Calendar.Week.DayOfWeek
instance Test.QuickCheck.Function.Function Data.Time.Calendar.Week.DayOfWeek
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Clock.Internal.SystemTime.SystemTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Clock.Internal.SystemTime.SystemTime
instance Test.QuickCheck.Function.Function Data.Time.Clock.Internal.SystemTime.SystemTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Calendar.CalendarDiffDays.CalendarDiffDays
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Calendar.CalendarDiffDays.CalendarDiffDays
instance Test.QuickCheck.Function.Function Data.Time.Calendar.CalendarDiffDays.CalendarDiffDays
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.LocalTime.Internal.CalendarDiffTime.CalendarDiffTime
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.LocalTime.Internal.CalendarDiffTime.CalendarDiffTime
instance Test.QuickCheck.Function.Function Data.Time.LocalTime.Internal.CalendarDiffTime.CalendarDiffTime
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Calendar.Month.Month
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Calendar.Month.Month
instance Test.QuickCheck.Function.Function Data.Time.Calendar.Month.Month
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Calendar.Quarter.QuarterOfYear
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Calendar.Quarter.QuarterOfYear
instance Test.QuickCheck.Function.Function Data.Time.Calendar.Quarter.QuarterOfYear
instance Test.QuickCheck.Arbitrary.Arbitrary Data.Time.Calendar.Quarter.Quarter
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.Time.Calendar.Quarter.Quarter
instance Test.QuickCheck.Function.Function Data.Time.Calendar.Quarter.Quarter

module Test.QuickCheck.Instances.Transformer
instance Test.QuickCheck.Arbitrary.Arbitrary1 m => Test.QuickCheck.Arbitrary.Arbitrary1 (Control.Monad.Trans.Maybe.MaybeT m)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 m, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Control.Monad.Trans.Maybe.MaybeT m a)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, Test.QuickCheck.Arbitrary.Arbitrary1 g) => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.Functor.Sum.Sum f g)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, Test.QuickCheck.Arbitrary.Arbitrary1 g, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Functor.Sum.Sum f g a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 f => Test.QuickCheck.Arbitrary.Arbitrary1 (Control.Applicative.Backwards.Backwards f)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Control.Applicative.Backwards.Backwards f a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 f => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.Functor.Reverse.Reverse f)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Functor.Reverse.Reverse f a)
instance Test.QuickCheck.Arbitrary.Arbitrary1 f => Test.QuickCheck.Arbitrary.Arbitrary1 (Control.Applicative.Lift.Lift f)
instance (Test.QuickCheck.Arbitrary.Arbitrary1 f, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Control.Applicative.Lift.Lift f a)

module Test.QuickCheck.Instances.UUID
instance Test.QuickCheck.Arbitrary.Arbitrary Data.UUID.Types.Internal.UUID
instance Test.QuickCheck.Arbitrary.CoArbitrary Data.UUID.Types.Internal.UUID
instance Test.QuickCheck.Function.Function Data.UUID.Types.Internal.UUID

module Test.QuickCheck.Instances.UnorderedContainers
instance (Data.Hashable.Class.Hashable a, GHC.Classes.Eq a, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.HashSet.Internal.HashSet a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.HashSet.Internal.HashSet a)
instance (Data.Hashable.Class.Hashable a, GHC.Classes.Eq a, Test.QuickCheck.Function.Function a) => Test.QuickCheck.Function.Function (Data.HashSet.Internal.HashSet a)
instance (Data.Hashable.Class.Hashable k, GHC.Classes.Eq k, Test.QuickCheck.Arbitrary.Arbitrary k) => Test.QuickCheck.Arbitrary.Arbitrary1 (Data.HashMap.Internal.HashMap k)
instance (Data.Hashable.Class.Hashable k, GHC.Classes.Eq k, Test.QuickCheck.Arbitrary.Arbitrary k, Test.QuickCheck.Arbitrary.Arbitrary v) => Test.QuickCheck.Arbitrary.Arbitrary (Data.HashMap.Internal.HashMap k v)
instance (Test.QuickCheck.Arbitrary.CoArbitrary k, Test.QuickCheck.Arbitrary.CoArbitrary v) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.HashMap.Internal.HashMap k v)
instance (Data.Hashable.Class.Hashable k, GHC.Classes.Eq k, Test.QuickCheck.Function.Function k, Test.QuickCheck.Function.Function v) => Test.QuickCheck.Function.Function (Data.HashMap.Internal.HashMap k v)

module Test.QuickCheck.Instances.Vector
instance Test.QuickCheck.Arbitrary.Arbitrary1 Data.Vector.Vector
instance Test.QuickCheck.Arbitrary.Arbitrary a => Test.QuickCheck.Arbitrary.Arbitrary (Data.Vector.Vector a)
instance Test.QuickCheck.Arbitrary.CoArbitrary a => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Vector.Vector a)
instance Test.QuickCheck.Function.Function a => Test.QuickCheck.Function.Function (Data.Vector.Vector a)
instance (Foreign.Storable.Storable a, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Vector.Storable.Vector a)
instance (Foreign.Storable.Storable a, Test.QuickCheck.Arbitrary.CoArbitrary a) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Vector.Storable.Vector a)
instance (Foreign.Storable.Storable a, Test.QuickCheck.Function.Function a) => Test.QuickCheck.Function.Function (Data.Vector.Storable.Vector a)
instance (Data.Vector.Unboxed.Base.Unbox a, Test.QuickCheck.Arbitrary.Arbitrary a) => Test.QuickCheck.Arbitrary.Arbitrary (Data.Vector.Unboxed.Base.Vector a)
instance (Data.Vector.Unboxed.Base.Unbox a, Test.QuickCheck.Arbitrary.CoArbitrary a) => Test.QuickCheck.Arbitrary.CoArbitrary (Data.Vector.Unboxed.Base.Vector a)
instance (Data.Vector.Unboxed.Base.Unbox a, Test.QuickCheck.Function.Function a) => Test.QuickCheck.Function.Function (Data.Vector.Unboxed.Base.Vector a)

module Test.QuickCheck.Instances.Void
instance Test.QuickCheck.Arbitrary.CoArbitrary GHC.Base.Void
instance Test.QuickCheck.Function.Function GHC.Base.Void


-- | Instances are provided for the types in the packages:
--   
--   <ul>
--   <li>array</li>
--   <li>bytestring</li>
--   <li>case-insensitive</li>
--   <li>containers</li>
--   <li>data-fix</li>
--   <li>OneTuple</li>
--   <li>old-time</li>
--   <li>strict</li>
--   <li>text</li>
--   <li>text-short</li>
--   <li>these</li>
--   <li>time</li>
--   <li>unordered-containers</li>
--   <li>uuid</li>
--   <li>primitive</li>
--   <li>vector</li>
--   </ul>
--   
--   Since all of these instances are provided as orphans, I recommend that
--   you do not use this library within another library module, so that you
--   don't impose these instances on down-stream consumers of your code.
--   
--   For information on writing a test-suite with Cabal see
--   <a>http://www.haskell.org/cabal/users-guide/#test-suites</a>
module Test.QuickCheck.Instances
