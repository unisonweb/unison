-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | locale library
--   
--   This package provides the ability to adapt to locale conventions such
--   as date and time formats.
@package old-locale
@version 1.0.0.7


-- | This module provides the ability to adapt to local conventions.
--   
--   At present, it supports only time and date information as used by
--   <tt>calendarTimeToString</tt> from the <tt>System.Time</tt> module in
--   the <tt>old-time</tt> package.
module System.Locale
data TimeLocale
TimeLocale :: [(String, String)] -> [(String, String)] -> [(String, String)] -> (String, String) -> String -> TimeLocale

-- | full and abbreviated week days
[wDays] :: TimeLocale -> [(String, String)]

-- | full and abbreviated months
[months] :: TimeLocale -> [(String, String)]
[intervals] :: TimeLocale -> [(String, String)]

-- | AM/PM symbols
[amPm] :: TimeLocale -> (String, String)

-- | formatting strings

-- | formatting strings

-- | formatting strings

-- | formatting strings
[dateTimeFmt, dateFmt, timeFmt, time12Fmt] :: TimeLocale -> String
defaultTimeLocale :: TimeLocale

-- | Construct format string according to <a>ISO-8601</a>.
--   
--   The <tt>Maybe String</tt> argument allows to supply an optional time
--   specification. E.g.:
--   
--   <pre>
--   <a>iso8601DateFormat</a> Nothing            == "%Y-%m-%d"           -- i.e. <tt><i>YYYY-MM-DD</i></tt>
--   <a>iso8601DateFormat</a> (Just "%H:%M:%S")  == "%Y-%m-%dT%H:%M:%S"  -- i.e. <tt><i>YYYY-MM-DD</i>T<i>HH:MM:SS</i></tt>
--   </pre>
iso8601DateFormat :: Maybe String -> String

-- | Format string according to <a>RFC822</a>.
rfc822DateFormat :: String
instance GHC.Show.Show System.Locale.TimeLocale
instance GHC.Classes.Ord System.Locale.TimeLocale
instance GHC.Classes.Eq System.Locale.TimeLocale
